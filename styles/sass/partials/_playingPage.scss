// playingPage
// Variables
@use './variables' as *;

.playingPage {
    min-height: 100vh;
}

.dataContainer {
    display: flex; 
    justify-content: space-between;
}

.userPointsContainer {
    display: flex;
    flex-direction: column;
}

.scoreText,
.pointsContainer {
    font-family: $tertiaryFont;
    font-size: 3rem;
    display: inline-block;
    margin: 0;
}

.timeContainer {
    font-family: $tertiaryFont;
    font-size: 3rem;
    display: flex;
    justify-content: center;
    align-items: center;
}

.question {
    font-family: $primaryFont;
    font-size: 2rem;
}

.timerWarningContainer {
    display: flex;
    justify-content: space-between;
    gap: 20px;
}

.warnings {
    margin-top: 25px;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: $tertiaryFont;
    font-size: 1.3rem;
    color: $primaryColor;
    min-height: 125px;
}

.choicesContainer {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
}

.mCButton {
    text-align: center;
    padding: 25px 50px;
    margin: 10px 0;
    width: 90%;
    font-family: $primaryFont;
    font-size: 1.5rem;
    background-color: $secondaryColor;
    box-shadow: inset 0 -8px 0 0 #00000033;
    transition: 150ms;
    text-shadow: 0px 1.5px #00000033;
    border: none;
    border-radius: 0.2rem;
}

.mCButton:hover,
.mcButton:focus {
    box-shadow: inset 0 -3px 0 0 #00000033;
}

.mcButton:active {
    box-shadow: inset 0 -1px 0 0 #00000033;
    background-color: #00000033;
}


// correct answer background
.correct {
    background-color: $correctColor;
}

// wrong background
.incorrect {
    background-color: $incorrectColor;
}
